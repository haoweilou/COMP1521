// COMP1521 19t2 ... lab 03: where are the bits?
// watb.c: determine bit-field order

#include <stdio.h>
#include <stdlib.h>

struct _bit_fields {
	unsigned int a : 4;
	unsigned int b : 8;
	unsigned int c : 20;
};

int main (void)
{
	struct _bit_fields x = {15,0,1048575};

	unsigned int *ptrx = (unsigned int *) &x;
	unsigned int mask = 1 << 31;
	
	for(int i = 0; i < 32; i++) {
	    if((*ptrx & mask) > 0){
	        printf("1");
	    } else if((*ptrx & mask) == 0) {
	        printf("0");
	    }
	    mask = mask >> 1;
	}
	/*The output is 11111111111111111111000000001111, where the (1*23) part is 
	at front and (0*8) part is in middle and (1*4) part is in the end.
	It is obvious that the layout for bit_fields is CBA.hence the used layout is
	cba because the for function print the output in reverse order*/
	printf("\n");
	return EXIT_SUCCESS;
}
